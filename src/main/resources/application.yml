spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: "jdbc:h2:mem:library;MODE=MYSQL;NON_KEYWORDS=USER"  #MODE를 MYSQL로 해서 MySQL환경으로 맞춰줄 수 있다. USER가 예약어이기 때문에 USER테이블을 만들어 줄 수 있도록 NON_KEYWORDS를 쓴다.
    username: "sa"
    password: ""
    driver-class-name: org.h2.Driver

  jap:
    hibernate:
      ddl-auto: create

    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
      path: /h2-console
---
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: "jdbc:mysql://localhost/library"
    username: "root"
    password: "1234"
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: none #스프링이 시작할 때 DB에 있는 테이브을 어떻게 처리할지 (DB와 매핑할 때 다른경우 어떻게 처리할지 creat/create-drop..등등이 있음)

    properties:
      hibernate:
        show_sql: true #JPA를 사용해서 DB에 SQL을 날릴 때 SQL을 보여줄건지
        format_sql: true #SQL을 보여준다면 보기좋게 포맷팅을 해서 보여줄지
        dialect: org.hibernate.dialect.MySQL8Dialect #방언, 사투리라는 뜻으로 SQL문법이 조금 다른 경우 SQL을 수정해준다.(현재 mySQL8에 맞게 설정)